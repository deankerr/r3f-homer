/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 egyptian_cat_figurine.glb --types --transform --root /public/model --output ../../src/components/models/Cat.tsx
Author: mvksxx (https://sketchfab.com/mvksxx)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/egyptian-cat-figurine-edf17f47aed94230843787ebeb0db1bf
Title: Egyptian cat figurine
*/
import { useGLTF } from '@react-three/drei'
import React, { useEffect, useMemo, useRef } from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
  }
  materials: {
    material_0: THREE.MeshBasicMaterial
  }
}

export function Cat({ color, ...props }: JSX.IntrinsicElements['group'] & { color: string }) {
  const { nodes, materials } = useGLTF('model/egyptian_cat_figurine-transformed.glb') as GLTFResult

  const tintedColor = useMemo(() => {
    const tintMe = new THREE.Color(color)
    tintMe.offsetHSL(0, 0, -0.3)
    return tintMe
  }, [color])

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.material_0}
        scale={1.582}
        position={[0, 0.07, 0]}
        rotation-y={-0.15}
        material-color={tintedColor}
      />
    </group>
  )
}

useGLTF.preload('model/egyptian_cat_figurine-transformed.glb')
