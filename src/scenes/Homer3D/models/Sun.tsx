/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 sun.glb --types --transform --root /public/model --output ../../src/Model/Sun.tsx
*/
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useRef } from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    sun1: THREE.Mesh
  }
  materials: {
    sun: THREE.MeshStandardMaterial
  }
}

export function Sun(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('model/sun-transformed.glb') as GLTFResult

  const ref = useRef<THREE.Group>(null!)

  useFrame(() => {
    ref.current.rotation.y += 0.01
  })

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.sun1.geometry} material={materials.sun} scale={10.008} />
    </group>
  )
}

useGLTF.preload('model/sun-transformed.glb')
